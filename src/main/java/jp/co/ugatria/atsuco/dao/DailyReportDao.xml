<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.ugatria.atsuco.dao.DailyReportDao">

	<sql id="allColumns">
		a.company_id as companyId,
		a.project_id as projectId,
		a.user_id as userId,
		a.report_date as reportDate,
		a.not_start_cnt as notStartCnt,
		a.in_work_cnt as inWorkCnt,
		a.finish_cnt as finishCnt,
		a.total_cnt as totalCnt,
		a.start_delayed_cnt as startDelayedCnt,
		a.complete_delayed_cnt as completeDelayedCnt,
		a.create_date as createDate,
		a.create_user_id as createUserId,
		a.update_date as updateDate,
		a.update_user_id as updateUserId,
		a.del_flg as delFlg
	</sql>

	<select id="sumStatusCnt" resultType="DailyReport">
		select
			a.report_date as reportDate,
			sum(a.not_start_cnt) as notStartCnt,
			sum(a.in_work_cnt) as inWorkCnt,
			sum(a.finish_cnt) as finishCnt
		from
			daily_report a
		where
			a.company_id = #{companyId} and
			a.project_id = #{projectId} and
			a.del_flg = '0'
		group by
			a.company_id,
			a.project_id,
			a.report_date
		order by
			a.report_date
	</select>

	<select id="sumDelayCnt" resultType="DailyReport">
		select
			a.report_date as reportDate,
			sum(a.start_delayed_cnt) as startDelayedCnt,
			sum(a.complete_delayed_cnt) as completeDelayedCnt
		from
			daily_report a
		where
			a.company_id = #{companyId} and
			a.project_id = #{projectId} and
			a.del_flg = '0'
		group by
			a.company_id,
			a.project_id,
			a.report_date
		order by
			a.report_date
	</select>

	<insert id="insert">
		insert into daily_report (
			company_id,
			project_id,
			user_id,
			report_date,
			not_start_cnt,
			in_work_cnt,
			finish_cnt,
			total_cnt,
			start_delayed_cnt,
			complete_delayed_cnt,
			create_date,
			create_user_id,
			update_date,
			update_user_id,
			del_flg
		)
		select
			company_id,
			project_id,
			isnull(user_id, 0) as user_id,
			current_date,
			sum(case when status = '1' then 1 else 0 end) as not_start_cnt,
			sum(case when status = '2' then 1 else 0 end) as in_work_cnt,
			sum(case when status = '3' then 1 else 0 end) as finish_cnt,
			count(*) as total_cnt,
			sum(case when status = '1' and start_deadline_date &lt; '${today} 00:00:00' then 1 else 0 end) as start_delayed_cnt,
			sum(case when status != '3' and end_deadline_date &lt; '${today} 00:00:00' then 1 else 0 end) as complete_delayed_cnt,
			current_timestamp,
			0,
			current_timestamp,
			0,
			'0'
		from
			task
		group by
			company_id,
			project_id,
			user_id
	</insert>
</mapper>
